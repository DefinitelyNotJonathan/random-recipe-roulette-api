{"version":3,"sources":["ErrorBoundary.js","ApiContext.js","config.js","Signup/Signup.js","Login/Login.js","Nav/Nav.js","HomePage/Homepage.js","NewRecipe/newRecipe.js","AddRecipe/AddRecipe.js","App.js","index.js"],"names":["ErrorBoundary","props","state","hasError","this","errorMessage","children","React","Component","createContext","user","setUser","ingredients","setIngredients","SignUp","handleSubmit","bind","e","preventDefault","data","FormData","target","sendData","entries","key","fetch","config","method","credentials","headers","body","JSON","stringify","then","res","json","hasOwnProperty","context","id","history","push","alert","className","onSubmit","htmlFor","type","name","required","to","contextType","ApiContext","Login","email","p_word","handlePassword","handleEmail","setState","value","validUserId","catch","error","Error","user_id","fetchUser","action","onChange","HomeNav","handleLogout","toggleActive","active","onClick","HomePage","toLogin","names","response","status","firstname","NewRecipe","recipe","source","preptime","waittime","cooktime","servings","comments","calories","carbs","fat","fiber","instructions","protein","satfat","sugar","tags","comment","getNewRecipe","keys","Object","randomNumber","Math","floor","random","length","randomString","String","prepIngredients","prepInstructions","window","scrollTo","input","split","map","ingredient","i","instruction","AddRecipe","$","document","parent","append","class","Num","App","exact","path","component","Signup","Provider","renderMainRoutes","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.be191f7a.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\n\nclass ErrorBoundary extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <h2>{this.props.errorMessage}</h2>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  errorMessage: PropTypes.string.isRequired\n};\n\nexport default ErrorBoundary;\n","import React from 'react';\n\nexport default React.createContext({\n    user: {},\n    setUser: () => { },\n    ingredients: [ ],\n    setIngredients: () => { }\n});","export default {\n    API_ENDPOINT: \n    'https://still-woodland-16107.herokuapp.com',\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\n\nexport default class SignUp extends React.Component {\n    static contextType = ApiContext;\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        let sendData = {};\n        for (var key of data.entries()) {\n            sendData[key[0]] = key[1];\n        }\n        fetch(`${config.API_ENDPOINT}/api/users`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(sendData),\n        })\n        .then((res) => res.json())\n        .then((user) => {\n            if (user && user.hasOwnProperty(\"id\")) {\n                this.context.setUser({ id: user.id });\n                this.props.history.push('/login');\n            } else {\n                alert('This email address is already being used by another account');\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"SignUp_container\">\n                <form onSubmit={this.handleSubmit} className=\"SignUp_form\">\n                    <h2 className=\"SignUp_header\">Create Account</h2>\n                    <label htmlFor=\"firstname\" className=\"SignUp_label\">First Name*</label>\n                    <input type=\"text\" id=\"firstname\" name=\"firstname\" className=\"SignUp_input\" required></input>\n                    <label htmlFor=\"lastname\" className=\"SignUp_label\">Last Name*</label>\n                    <input type=\"text\" id=\"lastname\" name=\"lastname\" className=\"SignUp_input\" required></input>\n                    <label htmlFor=\"email\" className=\"SignUp_label\">Email*</label>\n                    <input type=\"text\" id=\"email\" name=\"email\" className=\"SignUp_input\" required></input>\n                    <label htmlFor=\"p_word\" id=\"p_word\" name=\"p_word\" className=\"SignUp_label\">Password*</label>\n                    <input type=\"password\" id=\"p_word\" name=\"p_word\" className=\"SignUp_input\" required></input>\n                    <div className=\"SignUp_button_container\">\n                        <button name=\"signup\" className=\"SignUp_button\"> Create Account  </button>\n                        <Link className='button back' to='/login'>Go Back</Link>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\n\nexport default class Login extends React.Component {\n    static contextType = ApiContext;\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            p_word: '',\n        };\n        this.handlePassword = this.handlePassword.bind(this);\n        this.handleEmail = this.handleEmail.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handlePassword(e) {\n        this.setState({ p_word: e.target.value });\n    }\n\n    handleEmail(e) {\n        this.setState({ email: e.target.value });\n    }\n\n    fetchUser(validUserId) {\n        return fetch(`${config.API_ENDPOINT}/api/users/` + validUserId, {\n            method: 'GET',\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n        .catch((error) => {\n        })\n        .then((res) => res.json());\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const data = this.state;\n        fetch(`${config.API_ENDPOINT}/api/login`, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            credentials: 'include',\n            body: JSON.stringify(data),\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            if (data && data.hasOwnProperty(\"id\")) {\n                return data.id;\n            } else {\n                throw new Error('Something went wrong');\n            }\n        })\n        .then((user_id) => this.fetchUser(user_id))\n        .then((user) => {\n            if (user.hasOwnProperty('id')) {\n                this.context.setUser(user);\n                this.props.history.push('/');\n            } else {\n                    // some problem with the data load!\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Login_container\">\n                <header className=\"Login_Header\">\n                    <h1>Random Recipes</h1>\n                </header>\n                <form \n                    action=\"\"\n                    onSubmit={(e) => this.handleSubmit(e)}\n                    className=\"Login_form\"\n                >\n                    <label htmlFor=\"email\" className=\"Login_label\">Email</label>\n                    <input type=\"text\" id=\"email\" name=\"email\" value={this.state.email} onChange={(e) => this.handleEmail(e)} className=\"Login_input\" required></input>\n                    <label htmlFor=\"password\" className=\"Login_label\">Password</label>\n                    <input type=\"password\" id=\"password\" name=\"password\" value={this.state.p_word} onChange={(e) => this.handlePassword(e)} className=\"Login_input\" required ></input>\n                    <div className=\"Login_buttoncontainer\">\n                        <button type=\"submit\" className=\"Login_button\">Sign In</button>\n                    </div>\n                    <Link to=\"/signup\" className=\"Login_signup\">Create an account</Link>\n                </form>\n                <br />\n\n                <p className=\"loginDescription\">Tired of the same dinners every week? Ready to try something new? Welcome to Random Recipes! Login, and a new recipe will be waiting for you at the click of a button!</p>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\n\nexport default class HomeNav extends React.Component {\n    static contextType = ApiContext;\n    constructor(props) {\n        super(props);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.toggleActive = this.toggleActive.bind(this);\n        this.state = {\n            active: false,\n        };\n    }\n\n    handleLogout() {\n        fetch(`${config.API_ENDPOINT}/api/logout`, {\n            credentials: 'include',\n        });\n    }\n\n    toggleActive() {\n        if(this.state.active === true) {\n            this.setState({\n                active: false,\n            });\n        } else {\n            this.setState({\n                active: true,\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className={`Nav_Container ${this.state.active ? \"active\" : \"\"}`}>\n                <nav className=\"Nav_Navbar\">\n                    <button type=\"button\" className=\"Menu_button\" onClick={this.toggleActive}>{this.state.active ? \"-\" : \"+\"}</button>\n                    <ul className=\"Nav_Menu\">\n                        <li className=\"Nav_MenuLogo\">Random Recipes</li>\n                        {/* <li className={`Nav_MenuName ${this.state.active ? \"\" : \"hidden\"}`}>{this.context.user.firstname}</li> */}\n                        <li className={`Nav_MenuLogout ${this.state.active ? \"\" : \"hidden\"}`}>\n                            <Link onClick={this.handleLogout} to=\"/login\" className=\"button\">Logout</Link>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport Nav from '../Nav/Nav';\n\nexport default class HomePage extends React.Component {\n  static contextType = ApiContext;\n  constructor(props){\n    super(props);\n    this.state={\n      toLogin: false,\n      names: {},\n    };\n  }\n\n  componentDidMount() {\n    fetch(`${config.API_ENDPOINT}/api/recipes/names`, {\n      credentials: 'include',\n    })\n    .then((response) => {\n      if (response.status === 403) {\n        this.setState({\n          toLogin: true,\n        });\n      } else { return response.json(); }\n    })\n    .then((data) => {\n      this.setState({\n        names: data,\n      });\n    });\n  }\n\n  render() {\n    if (this.state.toLogin === true) {\n      return <Redirect to='/login' />;\n    }\n    return (\n      <div className=\"Page_Container\">\n        <header>\n          <Nav name={this.context.user.firstname}/>\n        </header>\n        <div className=\"Homepage_Container\">\n          <p className=\"Homepage_Welcome\">Sick of the same dinners? Done with your everyday desserts? Start your culinary adventure with the click of a button!</p>\n          <div className=\"NewRecipe_Link\">\n            <Link to=\"/newrecipe\" className=\"button\">Get A New Recipe!</Link>\n          </div>\n          {/* <div>\n            <Link to=\"/addrecipe\" className=\"button\">Have your own recipe to share? Add it here!</Link>\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport config from '../config';\nimport ApiContext from '../ApiContext';\nimport Nav from '../Nav/Nav';\n\nexport default class NewRecipe extends React.Component {\n    static contextType = ApiContext;\n    constructor(props) {\n        super(props);\n        this.state = {\n            toLogin: false,\n            names: {},\n            recipe: {\n                id: null,\n                name: null,\n                source: null,\n                preptime: null,\n                waittime: null,\n                cooktime: null,\n                servings: null,\n                comments: null,\n                calories: null,\n                carbs: null,\n                fat: null,\n                fiber: null,\n                ingredients: [],\n                instructions: [],\n                protein: null,\n                satfat: null,\n                sugar: null,\n                tags: null,\n            },\n            comment: true,\n        };\n        this.getNewRecipe = this.getNewRecipe.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(`${config.API_ENDPOINT}/api/recipes/names`, {\n            credentials: 'include',\n          })\n        .then((response) => {\n            if (response.status === 403) {\n                this.setState({\n                    toLogin: true,\n                });\n            } else { return response.json(); }\n        })\n        .then((data) => {\n            this.setState({\n                names: data,\n            });\n            this.getNewRecipe();   \n        }); \n    }\n\n    getNewRecipe(e) {\n        let keys = Object.keys(this.state.names);\n        let randomNumber = Math.floor(Math.random() * (keys.length)) + 1;\n        let randomString = String(randomNumber);\n        fetch(`${config.API_ENDPOINT}/api/recipes/random/` + randomString, {\n            credentials: 'include',\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            if (data.ingredients) {\n                data.ingredients = this.prepIngredients(data.ingredients);\n            }\n            if (data.instructions) {\n                data.instructions = this.prepInstructions(data.instructions);\n            }\n            this.setState({\n                recipe: data,\n            });\n            window.scrollTo(0,0);\n            if (this.state.recipe.comments == false ) {\n                this.setState({\n                    comment: false\n                });\n            } else {\n                this.setState({\n                comment: true\n                });\n            }\n        });\n    }\n\n    prepIngredients(input) {\n        return input.split('--');\n    }\n\n    prepInstructions(input) {\n        return input.split('\\r\\n\\r\\n');\n    }\n\n    render() {\n        let ingredients = this.state.recipe.ingredients;\n        let instructions = this.state.recipe.instructions;\n        if (this.state.toLogin === true) {\n            return <Redirect to=\"/login\"/>;\n        }\n        return(\n            <div className=\"Page_Container\">\n                <header>\n                    <Nav className=\"NewRecipe_Nav\" />\n                </header>\n                <div className=\"NewRecipe_Container\">\n                    <h1 className=\"NewRecipe_Header Name\">{this.state.recipe.name}</h1>\n                    <h2 className=\"NewRecipe_Header Servings\">Servings:</h2>\n                    <h2 className=\"NewRecipe_Servings\"> {this.state.recipe.servings}</h2>\n                    <h2 className=\"NewRecipe_Header Ingredients\">Ingredients:</h2>\n                    <ul className=\"NewRecipe_Ingredients_UL\">\n                        {\n                            ingredients.map((ingredient, i) => (\n                                <li key={i} className=\"NewRecipe_LI\">{ingredient} </li>\n                            ))\n                        }\n                    </ul>\n                    <h2 className=\"NewRecipe_Header Instructions\">Cooking Instructions:</h2>\n                    <ul className=\"NewRecipe_Instructions_UL\">\n                        {\n                            instructions.map((instruction, i) => (\n                                <li key={i} className=\"NewRecipe_LI\">{instruction}</li>\n                            ))\n                        }\n                    </ul>\n                    <h2 className={`NewRecipe_Header ${this.state.comment ? \"\" : \"hidden\"}`}>Notes:</h2>\n                    <p className={`NewRecipe_Comments ${this.state.comment ? \"\" : \"hidden\"}`}>{this.state.recipe.comments}</p>\n                    <h2 className=\"NewRecipe_Header Nutritional_Facts\">Nutritional Information:</h2>\n                    <ul className=\"NewRecipe_Nutritional_Facts_UL\">\n                        <li className=\"NewRecipe_LI Calories\">Calories: {this.state.recipe.calories}</li>\n                        <li className=\"NewRecipe_LI Fat\">Fat: {this.state.recipe.fat}</li>\n                        <li className=\"NewRecipe_LI SatFat\">Saturated Fat: {this.state.recipe.satfat}</li>\n                        <li className=\"NewRecipe_LI Carbs\">Carbs: {this.state.recipe.carbs}</li>\n                        <li className=\"NewRecipe_LI Fiber\">Fiber: {this.state.recipe.fiber}</li>\n                        <li className=\"NewRecipe_LI Sugar\">Sugar: {this.state.recipe.sugar}</li>\n                        <li className=\"NewRecipe_LI Protein\">Protein: {this.state.recipe.protein}</li>\n                    </ul>\n                    <div className=\"NewRecipe_Button_Container\">\n                        <button type=\"button\" onClick={this.getNewRecipe} className=\"NewRecipe_Button\">Get A New Recipe!</button>\n                        <Link to=\"/\" className=\"button\">Go Back</Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport config from '../config';\nimport Nav from '../Nav/Nav';\n\nexport default class AddRecipe extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            toLogin: false,\n            name: \"\",\n            preptime: [],\n            waittime: [],\n            cooktime: [],\n            servings: [],\n            comments: \"\",\n            calories: \"\",\n            fat: [],\n            satfat: [],\n            carbs: [],\n            fiber: [], \n            sugar: [],\n            protein: [],\n            instructions: [],\n            ingredients: [],\n            tags: [],\n\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(`${config.API_ENDPOINT}/api/recipes/names`, {\n            credentials: 'include',\n          })\n          .then((response) => {\n            if (response.status === 403) {\n              this.setState({\n                toLogin: true,\n              });\n            } else { return response.json(); }\n          })\n    }\n    \n    handleSubmit(e) {\n        e.preventDefault();\n        let data = this.state;\n        fetch(`${config.API_ENDPOINT}/api/recipes`, {\n            method: 'POST',\n            headers: {\"Content-Type\": \"application/json\"},\n            credentials: 'include',\n            body: JSON.stringify(data)\n        })\n    }\n/* need:\n\n    how to add unit by unit ingredients and instructions with button */\n    render() {\n\n        $(document).onClick('click', '.addIngredient', function(){\n            let html = '<input type=\"text\" name=\"myInput\">';\n          $(this).parent().append(html);\n        });\n        $(document).onClick('click', '.addInstruction', function(){\n            let html = '<input type=\"text\" name=\"myInput\">';\n          $(this).parent().append(html);\n        });\n        $(document).onClick('click', '.addTag', function(){\n            let html = '<input type=\"text\" name=\"myInput\">';\n          $(this).parent().append(html);\n        });\n\n        if (this.state.toLogin === true) {\n            return <Redirect to='/login' />;\n          }\n        return (\n            <div>\n                <Nav></Nav>\n                <main id=\"addRecipeMain\">\n                    <form id=\"addRecipeForm\" action=\"\" onSubmit={(e) => this.handleSubmit(e)}> \n                        {/* name */}\n                        <label htmlFor=\"recName\">Recipe Name</label>\n                        <input class=\"recInput\" id=\"recName\" value={this.state.name} onChange={(e) => this.setState({name: e.target.value()})}required></input>\n                        {/* preptime */}\n                        <label htmlFor=\"recPrep\">Recipe Prep Time</label>\n                        <input class=\"recInput\" id=\"recPrep\" value={this.state.preptime} onChange={(e) => this.setState({preptime: e.target.value()})}></input>\n                        {/* waittime */}\n                        <label htmlFor=\"recWait\">Recipe Wait Time</label>\n                        <input class=\"recInput\" id=\"recWait\" value={this.state.waittime} onChange={(e) => this.setState({waittime: e.target.value()})}></input>\n                        {/* cooktime */}\n                        <label htmlFor=\"recCook\">Recipe Cook Time</label>\n                        <input class=\"recInput\" id=\"recCook\" value={this.state.cooktime} onChange={(e) => this.setState({cooktime: e.target.value()})}></input>\n                        {/* servings */}\n                        <label htmlFor=\"recServings\">Recipe Servings</label>\n                        <input class=\"recInput\" id=\"recServings\" value={this.state.servings} onChange={(e) => this.setState({servings: Num(e.target.value())})}></input>\n                        {/* comments */}\n                        <label htmlFor=\"recComments\">Recipe Comments</label>\n                        <input class=\"recInput\" id=\"recComments\" value={this.state.comments} onChange={(e) => this.setState({comments: e.target.value()})}></input>\n                        {/* calories */}\n                        <label htmlFor=\"recCalories\">Recipe Calories</label>\n                        <input class=\"recInput\" id=\"recCalories\" value={this.state.calories} onChange={(e) => this.setState({calories: Num(e.target.value())})}></input>\n                        {/* fat */}\n                        <label htmlFor=\"recFat\">Recipe Fat</label>\n                        <input class=\"recInput\" id=\"recFat\" value={this.state.fat} onChange={(e) => this.setState({fat: Num(e.target.value())})}></input>\n                        {/* satfat */}\n                        <label htmlFor=\"recSatFat\">Recipe Saturated Fat</label>\n                        <input class=\"recInput\" id=\"recSatFat\" value={this.state.satfat} onChange={(e) => this.setState({satfat: Num(e.target.value())})}></input>\n                        {/* carbs */}\n                        <label htmlFor=\"recCarbs\">Recipe Carbs</label>\n                        <input class=\"recInput\" id=\"recCarbs\" value={this.state.carbs} onChange={(e) => this.setState({carbs: Num(e.target.value())})}></input>\n                        {/* fiber */}\n                        <label htmlFor=\"recFiber\">Recipe Fiber</label>\n                        <input class=\"recInput\" id=\"recFiber\" value={this.state.fiber} onChange={(e) => this.setState({fiber: Num(e.target.value())})}></input>\n                        {/* sugar */}\n                        <label htmlFor=\"recSugar\">Recipe Sugar</label>\n                        <input class=\"recInput\" id=\"recSugar\" value={this.state.sugar} onChange={(e) => this.setState({sugar: Num(e.target.value())})}></input>\n                        {/* protein */}\n                        <label htmlFor=\"recProtein\">Recipe Protein</label>\n                        <input class=\"recInput\" id=\"recProtein\" value={this.state.protein} onChange={(e) => this.setState({protein: Num(e.target.value())})}></input>\n                        {/* instructions */}\n                        <section>\n                            <button>add a step</button>\n                            <label htmlFor=\"recInstructions\" >Recipe Instructions</label>\n                            <input class=\"recInput\" id=\"recInstructions\" value={this.state.instructions} onChange={(e) => this.setState({instructions: [e.target.value()]})}required></input>\n                        </section>\n                        {/* ingredients */}\n                        <section>\n                            <button class=\"addIngredient\">add an ingredient</button>\n                            <label htmlFor=\"recIngredients\">Recipe Ingredients</label>\n                            <input class=\"recInput\" id=\"recIngredients\" value={this.state.ingredients} onChange={(e) => this.setState({ingredients: [e.target.value()]})} required></input>\n                        </section>\n                        {/* tags */}\n                        <section>\n                            <button>add a tag</button>\n                            <label htmlFor=\"recTags\">Recipe Tags</label>\n                            <input class=\"recInput\" id=\"recTags\" value={this.state.tags}></input>\n                        </section>\n                        <button>submit</button>\n                    </form>\n                </main>\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport ErrorBoundary from './ErrorBoundary';\nimport Signup from './Signup/Signup';\nimport Login from './Login/Login';\nimport HomePage from './HomePage/Homepage';\nimport NewRecipe from './NewRecipe/newRecipe';\nimport AddRecipe from './AddRecipe/AddRecipe';\nimport ApiContext from './ApiContext';\nimport config from './config';\nimport './App.css';\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      ingredients: []\n    };\n  }\n\n  renderMainRoutes() {\n    return (\n      <Route>\n        <Route exact path=\"/\" component={HomePage}/>\n        <Route path=\"/login\" component={Login}/>\n        <Route path=\"/signup\" component={Signup}/>\n        <Route path=\"/newrecipe\" component={NewRecipe}/>\n        <Route path=\"/addrecipe\" component={AddRecipe}/>\n      </Route>\n    );\n  }\n\n  render(){\n    const value = {\n      user: this.state.user,\n      setUser:(user) => {\n        this.setState({ user: user});\n      },\n      ingredients: this.state.ingredients,\n      setIngredients:(ingredients) => {\n        this.setState({ ingredients: ingredients});\n      }\n    };\n    return (\n      <ApiContext.Provider value={value}>\n        <div className=\"App\">\n          <header className=\"App_header\">\n          </header>\n          <ErrorBoundary errorMessage='could not display MainRoutes'>\n            <main className=\"App__main\">{this.renderMainRoutes()}\n            </main>\n          </ErrorBoundary>\n        </div>\n      </ApiContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport './App.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'));\n"],"sourceRoot":""}